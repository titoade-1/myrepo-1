The authenticity of host 'github.com (140.82.121.3)' can't be established.
ED25519 key fingerprint is SHA256:+DiY3wvvV6TuJJhbpZisF/zLDA0zPMSvHdkr4UvCOqU. (Git)



RDS_HOST: eda-projects.cq2e8zno855e.eu-west-1.rds.amazonaws.com
RDS_PASSWORD: EDAloananalyst
RDS_USER: loansanalyst
RDS_DATABASE: payments
RDS_PORT: 5432

credentials:
  RDS_HOST: my-first-rds-db.c4cc08jpe0kc.eu-west-2.rds.amazonaws.com
  RDS_PASSWORD: titotito1247
  RDS_USER: postgress
  RDS_DATABASE:  my-first-rds-db
  RDS_PORT: 5432

self.engine = create_engine(f"postgresql+psycopg2://{self.credentials_dict['RDS_USER']}:{self.credentials_dict['RDS_PASSWORD']}@{self.credentials_dict['RDS_HOST']}:{self.credentials_dict['RDS_PORT']}/{self.credentials_dict['RDS_DATABASE']}")
self.engine = create_engine(f"postgresql+psycopg2://{self.credentials_dict['RDS_HOST']}:{self.credentials_dict['PORT']}:{self.credentials_dict['PASS']}:{self.credentials_dict['USERNAME']}:{self.credentials_dict['DB_NAME']}")
engine = sqlalchemy.create_engine(f"{self.db_api}+psycopg2://{USERNAME}:{PASS}@{HOST}:{PORT}/{DB_NAME}")
engine = sqlalchemy.create_engine(f"{self.db_api}+psycopg2://@{RDS_HOST}:{RDS_PASSWORD}:{RDS_USER}:{RDS_DATABASE}:{RDS_PORT}")

selt.engine=create_engine(f"sqlalchemy://@{RDS_HOST}:{RDS_PASSWORD}:{RDS_USER}:{RDS_DATABASE}:{RDS_PORT}")
self.engine = create_engine(f"sqlalchemy://@{self.credentials_dict['RDS_HOST']}:{self.credentials_dict['RDS_PASSWORD']}:{self.credentials_dict['RDS_USER']}:{self.credentials_dict['RDS_DATABASE']}:{self.credentials_dict['RDS_PORT']}}")

return engine
 

Credentials setup

The content of the file should be something like this, but with your own details as the values:
RDS_HOST: my-first-rds-db.c4cc08jpe0kc.eu-west-2.rds.amazonaws.com
RDS_PASSWORD: password
RDS_USER: postgress
RDS_DATABASE:  my-first-rds-db
RDS_PORT: 5432

the file should be stored in the same directory as db_utils.py.
But, it's very important to add 'credentials.yaml' to your .gitignore file.
 This means that this yaml file will not be uploaded to your public github repo.
These credentials are private and you should not share them with the world!

Please also bear in mind that you will need 2 sets of credentials in this project.
 You will need 1 for the amazon rds database that you're extracting data from, and later on,
 you will need another one which will include the credentials for your local postgres database,
 which I think you call sales_data (but this name is your personal choice).
 You need to connect to the local database with the 2nd set of credentials in order
 to push your cleaned tables to postgres in pgadmin